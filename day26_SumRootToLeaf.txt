/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumNumbers(TreeNode root) {
        /*
        TreeNode ans = new TreeNode(0);
        
        dfs(root, 0 , ans);
        
        return ans.val;
        
        */
        
        return dfs(root, 0);  //sum above root = 0;
        
    }
    /*
    public void dfs(TreeNode node,int ssf, TreeNode ans){
        if(node==null)
            return;
        
        if(node.left==null && node.right==null){
            ssf+=node.val;
            ans.val+=ssf;
            return;
        }
        
        ssf+=node.val;
        
        dfs(node.left, ssf*10, ans);
        dfs(node.right, ssf*10, ans);
    }
    */
    
    //Much cleaner code
    public int dfs(TreeNode node, int sum){
        if(node==null)
            return 0;
        
        sum=(sum*10+node.val);
        
        if(node.left==null && node.right==null)
            return sum;
        
        return dfs(node.left, sum) + dfs(node.right, sum);
    }
    
}