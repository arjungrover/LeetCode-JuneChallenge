/*
1D dp is used.

First effect of each coin is put into every column (TO AVOID REDUNDANCY)

If we do that other way, it will be permutations.

Orange + apple = apple + orange (combination)

122!=221 (Permutations/Locker password)



*/

class Solution {
    public int change(int amount, int[] coins) {
        int[] dp = new int[amount+1];
        dp[0] = 1;
        for(int i=0;i<coins.length;i++){
            int coin = coins[i];
            for(int j=0;j<dp.length;j++){
                if(j-coin>=0){
                    dp[j]+=dp[j-coin];
                }
            }
        }
        
        return dp[amount];
    }
}